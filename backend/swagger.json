{
  "openapi": "3.0.0",
  "info": {
    "title": "Autotracks API",
    "description": "This collection contains all the supported API calls to the Autotracks Express API.\n\nEach request is an example of an API call for testing purposes and contains a description of what the route is used for as well as usage guidelines.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication requests to the API are the routes used to sign a user in, log them out and register a new admin user. There is also a route to verify a user's saved authentication token for keeping users logged in."
    },
    {
      "name": "Users",
      "description": "Requests related to the User model. All these routes are protected, therefore an authorization (bearer token) header is needed for it to work properly.\n\nThe format of the header is as follows:\nAuthorization: Bearer json.web.token\n\nIt is important to follow the format of the header correctly or access will be refused even if the token is valid."
    },
    {
      "name": "Dealerships",
      "description": "Requests related to the Dealership model"
    },
    {
      "name": "Vehicle Properties",
      "description": "Requests related to Vehicle Properties"
    },
    {
      "name": "Vehicles",
      "description": "Requests related to Vehicles"
    },
    {
      "name": "Events",
      "description": "Requests related to Events"
    }
  ],
  "paths": {
    "/api/v1/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Signin User",
        "description": "## Description\nSign a user in to the application. Endpoint will validate the information passed in the body and if passes will return the signed in user, a valid authorization JWT and set the token in the browser cookies.\n\nJWT generated expires in 30 days.\n## Usage\nBody must have an email and a password in JSON format. All other fields are ignored. No specific header is required for this route.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "cedrikdubois@gmail.com",
                  "password": "password"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout User",
        "description": "## Description\nLogout user from the application. Remove saved authentication token from browser cookies and return an empty object. Token must also be deleted from the browser local storage on the client side.\n\n## Usage\nSimply call the endpoint with no body and no extra headers. The currently logged in user will get logged out.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register New User",
        "description": "## Description\nRegister a new administrator user. An administrator user (admin) does not have a dealership associated to them. This route also only accepts users that have the role of 'Administration'.\n\nNote this route is not used for creating a staff user account. It is used for registering a new admin account. It will return upon success the user information as well as a valid authorization token. Client side will handle redirecting to the dashboard and storing the token in the local storage.\n## Usage\nMust be signed out to use this route. Following are the fields needed in the body in JSON format. Look at the request body as an example.\n- (required) first_name: String\n- (required) last_name: String\n- (required, unique) email: String\n- (required) role: 'Administration'\n- (required) password: String",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "first_name": "Admin",
                  "last_name": "Account",
                  "email": "admin@account.com",
                  "role": "Administration",
                  "permissions": [
                    "Add Dealerships",
                    "View Dealerships",
                    "Edit Dealerships",
                    "Delete Dealerships",
                    "Add Staff Users",
                    "View Staff Users",
                    "Edit Staff Users",
                    "Delete Staff Users",
                    "Add Vehicles",
                    "View Vehicles",
                    "Edit Vehicle Properties",
                    "Edit Vehicle Locations",
                    "Sell Vehicles",
                    "Delete Vehicles"
                  ],
                  "password": "adminpassword"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/auth/changepassword/618ad6da5cdc75b8288eba26": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change Password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "newPassword": "Linken14",
                  "currentPassword": "OQTA9K687I2T"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MThhZDZkYTVjZGM3NWI4Mjg4ZWJhMjYiLCJpYXQiOjE2MzY0OTEwODYsImV4cCI6MTYzOTA4MzA4Nn0.UckgDtoHLAdnh6M2BlGTw1bFincLh-KBqIdItYTMpPM"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/users/6176c48f825fbc6aac712b62": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "## Description\nGet a user with the id specified in the url\n\n## Usage\nWill return the user in the response body. If the user does not exist, will return 404 response",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "number"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYwNzgxMjcsImV4cCI6MTYzODY3MDEyN30.4NdAXH3JwnOAyAxJLyi_J-Jbr5jBSu2_DwCTRAJRjug"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update a specific user with a MongoDB ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "first_name": "Cedrik"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYyMjYwNDAsImV4cCI6MTYzODgxODA0MH0.lXZY6sTfDBStweCvgDxNJT9iuh1Hsi1oF5-n6VYEU2I"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "## Description\nGet a list of users based on query parameters. Must be logged in with proper authorization to access this route.\n\nCan only filter users associated to dealerships the logged in user is also associated to. This is to prevent users being able to search for users in other dealerships\n## Usage\nTo filter using the basic properties, use query parameters in the following format:\n- /?key=value\n- ex. /?first_name=Cedrik&role=Backshop\n\nYou can select specific fields you want to see if you don't need to return the entire object. To do this, add the query parameter 'select', and set it's value to the fields you want to select separated by a comma:\n- /?select=field1,field2\n- ex. /?select=first_name,last_name\n\nYou can also populate fields that are related to another document in the database. Instead of returning only the ObjectId (default), populate returns the entire object in the response. Use the 'populate' query parameter and set it's value to the fields you want populated, or 'expanded', separated by a comma:\n- /?populate=field1,field2\n- ex. /?populate=first_name,last_name\n\nNOTE: fields that can't be populated (not related to an object) will just return like they normally would.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "number"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYwNzgxMjcsImV4cCI6MTYzODY3MDEyN30.4NdAXH3JwnOAyAxJLyi_J-Jbr5jBSu2_DwCTRAJRjug"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create New Staff",
        "description": "Register a new user in the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "first_name": "Test",
                  "last_name": "Test",
                  "email": "test_staff@autotracks.com",
                  "role": "Management",
                  "permissions": [
                    "Add Dealerships",
                    "View Dealerships",
                    "Edit Dealerships",
                    "Delete Dealerships",
                    "Add Staff Users",
                    "View Staff Users",
                    "Edit Staff Users",
                    "Delete Staff Users",
                    "Add Vehicles",
                    "View Vehicles",
                    "Edit Vehicle Properties",
                    "Edit Vehicle Locations",
                    "Sell Vehicles",
                    "Delete Vehicles"
                  ],
                  "dealership": "618b3bf134f07d9a91c32a1b",
                  "password": "password123"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYyMDc0NDksImV4cCI6MTYzODc5OTQ0OX0.q-msNvrsPOLechek7xjcq7gisNL3uToUg5xlXLVlo9M"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/users/": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Delete a specific user with a MongoDB ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "number"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYwNzgxMjcsImV4cCI6MTYzODY3MDEyN30.4NdAXH3JwnOAyAxJLyi_J-Jbr5jBSu2_DwCTRAJRjug"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships/618db6b95b33387804b2156a": {
      "get": {
        "tags": [
          "Dealerships"
        ],
        "summary": "Get Dealership",
        "description": "Get a specific dealership with a MongoDB ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYyMjYwNDAsImV4cCI6MTYzODgxODA0MH0.lXZY6sTfDBStweCvgDxNJT9iuh1Hsi1oF5-n6VYEU2I"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships": {
      "get": {
        "tags": [
          "Dealerships"
        ],
        "summary": "Get Dealerships",
        "description": "## Description\nGet a list of dealerships based on query parameters. Must be logged in with proper authorization to access this route.\n\nCan only filter dealerships associated to the logged in user. This is to prevent users being able to search for dealerships they do not own or have access to.\n## Usage\nTo filter using the basic properties, use query parameters in the following format:\n- /?key=value\n- ex. /?name=DealershipName\n\nYou can select specific fields you want to see if you don't need to return the entire object. To do this, add the query parameter 'select', and set it's value to the fields you want to select separated by a comma:\n- /?select=field1,field2\n- ex. /?select=name,description\n\nYou can also populate fields that are related to another document in the database. Instead of returning only the ObjectId (default), populate returns the entire object in the response. Use the 'populate' query parameter and set it's value to the fields you want populated, or 'expanded', separated by a comma:\n- /?populate=field1,field2\n- ex. /?populate=first_name\n\nNOTE: fields that can't be populated (not related to an object) will just return like they normally would.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "number"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTg3MWU2NmFjMzNjYmE1N2JmMWQ4MTEiLCJpYXQiOjE2MzYyNTc0NTYsImV4cCI6MTYzODg0OTQ1Nn0.5EkgVbg4soRtZGUNmN5_VI9GoXTjlinewnYPaCMzs4c"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dealerships"
        ],
        "summary": "Create New Dealership",
        "description": "Create a new dealership",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "Audi Park Avenue",
                  "description": "First dealership",
                  "admin": "61871e66ac33cba57bf1d811"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MTc2YzQ4ZjgyNWZiYzZhYWM3MTJiNjIiLCJpYXQiOjE2MzYyMDc0NDksImV4cCI6MTYzODc5OTQ0OX0.q-msNvrsPOLechek7xjcq7gisNL3uToUg5xlXLVlo9M"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships/1": {
      "put": {
        "tags": [
          "Dealerships"
        ],
        "summary": "Update Dealership",
        "description": "Update a specific dealership with a MongoDB ID",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dealerships"
        ],
        "summary": "Delete Dealership",
        "description": "Delete a specific dealership with a MongoDB ID",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships/618b3bf134f07d9a91c32a1b/vehicles/properties": {
      "post": {
        "tags": [
          "Vehicle Properties"
        ],
        "summary": "Create Vehicle Property",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "headerName": "Serial Number",
                  "inputType": "Text",
                  "options": null,
                  "visible": true,
                  "isRequired": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "Vehicle Properties"
        ],
        "summary": "Get Vehicle Properties",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle Properties"
        ],
        "summary": "Update Vehicle Property Positions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "properties": [
                    {
                      "_id": "619d4a6785799ddbda3673b6",
                      "dealership": "618b3bf134f07d9a91c32a1b",
                      "headerName": "Exterior Color",
                      "inputType": "Text",
                      "options": null,
                      "visible": true,
                      "position": 1,
                      "isRequired": true,
                      "field": "exteriorColor",
                      "__v": 0
                    },
                    {
                      "_id": "619d528f85799ddbda367410",
                      "dealership": "618b3bf134f07d9a91c32a1b",
                      "headerName": "Interior Color",
                      "inputType": "Text",
                      "options": null,
                      "visible": true,
                      "position": 2,
                      "isRequired": true,
                      "field": "interiorColor",
                      "__v": 0
                    },
                    {
                      "_id": "619d529985799ddbda367413",
                      "dealership": "618b3bf134f07d9a91c32a1b",
                      "headerName": "Serial Number",
                      "inputType": "Text",
                      "options": null,
                      "visible": true,
                      "position": 3,
                      "isRequired": true,
                      "field": "serialNumber",
                      "__v": 0
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships/618db6b95b33387804b2156a/vehicles/properties/619d0ef6d68245b4dcf32f03": {
      "delete": {
        "tags": [
          "Vehicle Properties"
        ],
        "summary": "Delete Vehicle Property",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/dealerships/618db6b95b33387804b2156a/vehicles/properties/619d529985799ddbda367413": {
      "put": {
        "tags": [
          "Vehicle Properties"
        ],
        "summary": "Update Vehicle Property",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "position": 3,
                  "headerName": "Serial Number"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/inventory/dealership/61b93a6567cca570f603427d": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get Vehicles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWE3YjlkMjUzMmU5MTk4YjI0ZjNhODgiLCJpYXQiOjE2Mzk2OTMxMzMsImV4cCI6MTY0MjI4NTEzM30.Jej1WjX3gN-XVpoYMMM4P0waByZoZHm_O9NMdZcA_BA"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/inventory": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Create Vehicle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "dealership": "61b93a6567cca570f603427d",
                  "properties": {
                    "model": "A4 45 TFSI",
                    "model#": "8WCBAY",
                    "exteriorColor": "T9T9",
                    "interorColor": "YS",
                    "options": [
                      "9ZE",
                      "AMC"
                    ],
                    "order#": "DT4568",
                    "serialNumber": "WAUAAAF4XMAD42299",
                    "stock#": "210423",
                    "notes": "Lumieres portes avant | Ens. protection 600$ | Ens. hiver 4136$",
                    "status": "Courtoisie"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWE3YjlkMjUzMmU5MTk4YjI0ZjNhODgiLCJpYXQiOjE2Mzk1MzExMzksImV4cCI6MTY0MjEyMzEzOX0.yl4wfSEeHTHbM0SyOSX4y9w30HdtAegvJMwlazj9QHU"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/events/dealership/61b93a6567cca570f603427d": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Events",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWE3YjlkMjUzMmU5MTk4YjI0ZjNhODgiLCJpYXQiOjE2NDIyMDk1NjksImV4cCI6MTY0NDgwMTU2OX0.adzitM2VyemWSAbjGlpkEEiQQ4cr53Bi9U87F6-U424"
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "vehicle_missing"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/events/dealership/61b93a6567cca570f603427d/user/61a7b9d2532e9198b24f3a88": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get UnRead Events",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWE3YjlkMjUzMmU5MTk4YjI0ZjNhODgiLCJpYXQiOjE2NDIyMDk1NjksImV4cCI6MTY0NDgwMTU2OX0.adzitM2VyemWSAbjGlpkEEiQQ4cr53Bi9U87F6-U424"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}